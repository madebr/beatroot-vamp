name: Build

on: [push, pull_request]

jobs:
  Build:
    name: ${{ matrix.platform.name }}
    runs-on: ${{ matrix.platform.os }}

    defaults:
      run:
        shell: ${{ matrix.platform.shell }}

    strategy:
      fail-fast: false
      matrix:
        platform:
          - { name: Windows (mingw64),      os: windows-latest, shell: 'msys2 {0}', msystem: mingw64, msys-env: mingw-w64-x86_64 }
          - { name: Linux (gcc),            os: ubuntu-latest,  shell: 'sh'}
          - { name: MacOS,                  os: macos-latest,   shell: 'sh'}

    steps:
      - name: Set up MSYS2
        if: matrix.platform.msystem != ''
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.platform.msystem }}
          install: >-
            ${{ matrix.platform.msys-env }}-cmake
            ${{ matrix.platform.msys-env }}-ninja
            ${{ matrix.platform.msys-env }}-gcc

      - uses: actions/checkout@v2

      - name: Configure CMake
        run: |
          cmake -S . -B build_shared -DBUILD_SHARED_LIBS=ON  -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=prefix
          cmake -S . -B build_static -DBUILD_SHARED_LIBS=OFF -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=prefix
      - name: Build
        run: |
          cmake --build build_shared --config Release --parallel --verbose
          cmake --build build_static --config Release --parallel --verbose
      - name: Install
        run: |
          cmake --install build_shared --config Release
          cmake --install build_static --config Release
          ( cd prefix; find . ) | LC_ALL=C sort -u
